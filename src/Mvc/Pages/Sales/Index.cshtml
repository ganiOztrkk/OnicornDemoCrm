@{
    ViewBag.Title = "Sales";
    Layout = "_Layout";
}

@section Scripts {
    <script src="/AdminLTE/plugins/datatables/jquery.dataTables.min.js"></script>
    <script src="/AdminLTE/plugins/datatables-bs4/js/dataTables.bootstrap4.min.js"></script>
    <script src="/AdminLTE/plugins/datatables-responsive/js/dataTables.responsive.min.js"></script>
    <script src="/AdminLTE/plugins/datatables-responsive/js/responsive.bootstrap4.min.js"></script>
    <script src="/AdminLTE/plugins/datatables-buttons/js/dataTables.buttons.min.js"></script>
    <script src="/AdminLTE/plugins/datatables-buttons/js/buttons.bootstrap4.min.js"></script>
    <script src="/AdminLTE/plugins/jszip/jszip.min.js"></script>
    <script src="/AdminLTE/plugins/pdfmake/pdfmake.min.js"></script>
    <script src="/AdminLTE/plugins/pdfmake/vfs_fonts.js"></script>
    <script src="/AdminLTE/plugins/datatables-buttons/js/buttons.html5.min.js"></script>
    <script src="/AdminLTE/plugins/datatables-buttons/js/buttons.print.min.js"></script>
    <script src="/AdminLTE/plugins/datatables-buttons/js/buttons.colVis.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
    <script>
    $(document).ready(function () {

        //dinamik tablo oluşturma
        let table = $('#saleTable').DataTable({
            ajax: {
                url: '/Sales/GetAll/',
                dataSrc: function (json) {
                    return JSON.parse(json.data);
                }
            },
            columns: [
                { data: 'Description' },
                { data: 'Amount' },
                {
                    data: 'Date',
                    render: function (data) {
                        let date = new Date(data);
                        return date.getFullYear() + '-' +
                            ('0' + (date.getMonth() + 1)).slice(-2) + '-' +
                            ('0' + date.getDate()).slice(-2);
                    }
                },
                {
                    data: 'IsPaid',
                    render: function (data) {
                        return data ? 'Ödendi' : 'Ödenmedi';
                    }
                },
                {
                    data: null,
                    className: "center",
                    defaultContent: '<button class="btn btn-sm btn-warning editBtn"><i class="fas fa-edit"></i></button> <button class="btn btn-sm btn-danger deleteBtn"><i class="fas fa-trash"></i></button>'
                }
            ],
            order: [[0, 'asc']],
            paging: true,
            searching: true,
            info: true,
            lengthMenu: [[20, 50, 100, -1], [20, 50, 100, "Tümü"]],
            createdRow: function (row, data) {
                if (data.IsDeleted) {
                    $(row).css('background-color', 'red');
                    $(row).css('color', 'white');
                }
            },
            columnDefs: [{
                targets: 3,
                createdCell: function (td, cellData) {
                    if (cellData) {
                        $(td).css('background-color', 'green');
                        $(td).css('color', 'white');
                    } else {
                        $(td).css('background-color', 'red');
                        $(td).css('color', 'white');
                    }
                }
            }]
        });

        //tablo dinamik tekrar yükle
        function reloadTable() {
            table.ajax.reload();
        }

        function loadSalesPersons(selectedId = null) {
            $.ajax({
                url: '/Sales/GetSellers',
                type: 'GET',
                success: function (response) {
                    try {
                        let salesPersons = (typeof response.data === 'string') ? JSON.parse(response.data) : response.data;

                        if (response.success) {
                            let salesPersonSelect = $('#SalesPersonId');
                            salesPersonSelect.empty();
                            salesPersonSelect.append('<option value="">Satış Elemanı Seçin</option>');

                            $.each(salesPersons, function (index, user) {
                                let option = new Option(user.Name + ' ' + user.Lastname, user.Id);
                                salesPersonSelect.append(option);
                            });

                            if (selectedId) {
                                salesPersonSelect.val(selectedId);
                            }
                        } else {
                            toastr.error(response.message);
                        }
                    } catch (error) {
                        console.error('Response Parsing Error:', error);
                        toastr.error('Satış elemanları yüklenirken bir hata oluştu');
                    }
                },
                error: function () {
                    toastr.error('Satış elemanları yüklenirken bir hata oluştu');
                }
            });
        }


        //modal - satış kaydet işlemi
        $('#saveSaleBtn').on('click', function () {
            let formData = $('#saleForm').serialize();
            $.ajax({
                url: '/Sales/Create/',
                type: 'POST',
                data: formData,
                success: function (response) {
                    if (response.success) {
                        toastr.success(response.message);
                        $('#saleModal').modal('hide');
                        reloadTable();
                    } else {
                        toastr.error(response.message);
                    }
                },
                error: function () {
                    toastr.error('Beklenmedik bir hata oluştu');
                }
            });
        });

        //modal - satış güncelle işlemi
        $('#updateSaleBtn').on('click', function () {
            let formData = $('#saleForm').serialize();
            $.ajax({
                url: '/Sales/Update/',
                type: 'POST',
                data: formData,
                success: function (response) {
                    if (response.success) {
                        toastr.success(response.message);
                        $('#saleModal').modal('hide');
                        reloadTable();
                    } else {
                        toastr.error(response.message);
                    }
                },
                error: function () {
                    toastr.error('Beklenmedik bir hata oluştu');
                }
            });
        });

        //modal - update ekranı açma
        $('#saleTable tbody').on('click', '.editBtn', function () {
            let userId = table.row($(this).parents('tr')).data().Id;
            $.ajax({
                url: '/Sales/GetById/',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({ id: userId }),
                success: function (response) {
                    if (response.success) {
                        let data = JSON.parse(response.data);
                        $('#Id').val(data.Id);
                        $('#Description').val(data.Description);
                        $('#Amount').val(data.Amount);
                        $('#Amount').val(data.Amount);
                        $('#IsPaid').val(data.IsPaid);
                        $('#SalesPersonId').val(data.SalesPersonId);
                        $('#CustomerId').val(data.CustomerId);
                        $('#saveSaleBtn').hide();
                        $('#dateDiv').hide();
                        $('#updateSaleBtn').show();
                        $('#saleModalLabel').text("Satış Güncelle");
                        $('#saleModal').modal('show');
                        loadSalesPersons(data.SalesPersonId);
                    } else {
                        toastr.error(response.message);
                    }
                },
                error: function () {
                    toastr.error('Beklenmedik bir hata oluştu');
                }
            });
        });

        //satış delete işlemi
        $('#saleTable tbody').on('click', '.deleteBtn', function () {
            let saleId = table.row($(this).parents('tr')).data().Id;
            $.ajax({
                url: '/Sales/Delete/',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({ id: saleId }),
                success: function (response) {
                    if (response.success) {
                        toastr.success(response.message);
                        reloadTable();
                    } else {
                        toastr.error(response.message);
                    }
                },
                error: function () {
                    toastr.error('Beklenmedik bir hata oluştu');
                }
            });
        });
        
        //modal- create ekranı açma
        $('#addSaleBtn').on('click', function () {
            $('#saleForm')[0].reset();
            $('#updateSaleBtn').hide();
            $('#IsDeletedDiv').hide();
            $('#saveSaleBtn').show();
            $('#dateDiv').show();
            $('#saleModalLabel').text("Satış Kaydet");
            $('#saleModal').modal('show');
            loadSalesPersons();
        });
        
        //modal kapama
        $('#closeCreateModal').on('click', function () {
            $('#saleForm')[0].reset();
            $('#saleModal').modal('hide');
        });
    });
</script>
}


<div class="card-header d-flex justify-content-between">
    <h3 class="card-title">Satış Listesi</h3>
    <button class="btn btn-primary" id="addSaleBtn"><i class="fas fa-plus"></i> Satış Ekle</button>
</div>
<div class="card-body">
    <table id="saleTable" class="table table-striped table-bordered text-center">
        <thead>
        <tr>
            <th>Satış Açıklama</th>
            <th>Satış Tutar</th>
            <th>Satış Tarihi</th>
            <th>Ödeme Durumu</th>
            <th>İşlem / Detay</th>
        </tr>
        </thead>
        <tbody>
        </tbody>
    </table>
</div>
<!-- Satış Ekleme Modalı -->
<div class="modal fade" id="saleModal" tabindex="-1" role="dialog" aria-labelledby="saleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="saleModalLabel">Satış Ekle</h5>
                <button id="closeCreateModal" type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="saleForm">
                    <input type="hidden" class="form-control" id="Id" name="Id">
                    <div class="form-group">
                        <label for="Description">Satış Açıklama</label>
                        <input type="text" class="form-control" id="Description" name="Description">
                    </div>
                    <div class="form-group">
                        <label for="Amount">Tutar</label>
                        <input type="text" class="form-control" id="Amount" name="Amount">
                    </div>
                    <div class="form-group" id="dateDiv" style="display: none;">
                        <label for="Date">Tarih</label>
                        <input type="date" class="form-control" id="Date" name="Date">
                    </div>
                    <div class="form-group">
                        <label for="IsPaid">Ödeme Durumu</label>
                        <select class="form-control" id="IsPaid" name="IsPaid">
                            <option value="false">Ödenmedi</option>
                            <option value="true">Ödendi</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="SalesPersonId">Satış Elemanı</label>
                        <select class="form-control" id="SalesPersonId" name="SalesPersonId">
                            <option value="">Satış Elemanı Seçin</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="CustomerId">Müşteri</label>
                        <input type="text" class="form-control" id="CustomerId" name="CustomerId">
                    </div>
                    <div class="form-group" id="IsDeletedDiv" style="display: none;">
                        <label for="IsDeleted">Kayıt Durumu</label>
                        <select class="form-control" id="IsDeleted" name="IsDeleted">
                            <option value="false">Aktif</option>
                            <option value="true">Pasif</option>
                        </select>
                    </div>
                    <button type="button" class="btn btn-primary" id="saveSaleBtn">Kaydet</button>
                    <button type="button" class="btn btn-primary" id="updateSaleBtn">Güncelle</button>
                </form>
            </div>
        </div>
    </div>
</div>